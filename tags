!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ASSIST_H	assist.h	2;"	d
Alarm	ftp_work.c	/^static void Alarm(int signo)$/;"	f	file:
COMMAND_H	command.h	2;"	d
COMMON_H	common.h	2;"	d
CONFIGURE_H	configure.h	2;"	d
CheckRoot	assist.c	/^void CheckRoot()$/;"	f
ECHO_H	echo.h	2;"	d
EVENT_H	event.h	2;"	d
ErrQuit	common.h	21;"	d
EventBegin	event.c	/^void EventBegin(event_t *ptr)$/;"	f
EventInit	event.c	/^void EventInit(event_t *ptr)$/;"	f
FTP_CONTROL_CLOSE	command.h	5;"	d
FTP_NOBODY_H	ftp_nobody.h	2;"	d
FTP_WORK_H	ftp_work.h	2;"	d
FtpReply	command.h	/^void FtpReply(event_t *ptr,int status,const char *text)$/;"	f
HandleAlarm	ftp_work.c	/^static void HandleAlarm()$/;"	f	file:
HandleSigchld	assist.c	/^void HandleSigchld()$/;"	f
MAX_LEN	event.h	6;"	d
NobodyHandle	ftp_nobody.c	/^void NobodyHandle(event_t *ptr)$/;"	f
NobodyInit	ftp_nobody.c	/^void NobodyInit(event_t *ptr)$/;"	f
Read	echo.c	/^ssize_t Read(int fd,void *buf,size_t n)$/;"	f
Readline	echo.c	/^size_t Readline(int fd,void *buf,size_t maxlen)$/;"	f
RecvPeek	echo.c	/^static ssize_t RecvPeek(int fd,void *buf,size_t n)$/;"	f	file:
Sigchld	assist.c	/^static void Sigchld(int signo)$/;"	f	file:
TcpServer	echo.c	/^int TcpServer(const char *host,unsigned short port)$/;"	f
Tunable_Listen_Address	configure.c	/^const char *Tunable_Listen_Address = NULL;$/;"	v
Tunable_Listen_Port	configure.c	/^unsigned short int Tunable_Listen_Port = 21;$/;"	v
Tunable_Recv_Timeout	configure.c	/^unsigned int Tunable_Recv_Timeout = 600;$/;"	v
WorkHandle	ftp_work.c	/^void WorkHandle(event_t *ptr)$/;"	f
WorkInit	ftp_work.c	/^void WorkInit(event_t *ptr)$/;"	f
Write	echo.c	/^ssize_t Write(int fd,const void *buf,size_t n)$/;"	f
command	event.h	/^	char command[MAX_LEN];	\/\/client发来的FTP指令$/;"	m	struct:__anon1
connfd	event.h	/^	int connfd;			\/\/client与server的控制连接fd$/;"	m	struct:__anon1
datafd	event.h	/^	int datafd;			\/\/client与server的数据连接fd$/;"	m	struct:__anon1
event_t	event.h	/^}event_t;$/;"	t	typeref:struct:__anon1
main	main.c	/^int main(int argc,char **argv)$/;"	f
nobodyfd	event.h	/^	int nobodyfd;		\/\/nobody进程所用fd$/;"	m	struct:__anon1
pevent	assist.h	/^event_t *pevent;$/;"	v
workfd	event.h	/^	int workfd;			\/\/work进程所用fd$/;"	m	struct:__anon1
